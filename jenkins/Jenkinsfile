pipeline {
	agent any
    options {
		cache(definitions: [mavenCache(path: "~/.m2/repository")])
    }
    parameters {
		string(name: 'BROWSER', defaultValue: 'chrome', description: '–í—ã–±–µ—Ä–∏—Ç–µ –±—Ä–∞—É–∑–µ—Ä (chrome/firefox)')
    }
    environment {
		ALLURE_HOME = "/opt/homebrew/bin/allure"
        MAVEN_HOME = "/opt/homebrew/bin/mvn"
        TELEGRAM_BOT_TOKEN = "8040905753:AAEeindN9glf1rRMHxj_Na0cbVsxfiY1T-E"
        TELEGRAM_CHAT_ID = "7873857"
        PATH = "${ALLURE_HOME}:${env.PATH}"
    }
    stages {
		stage('Checkout') {
			steps {
				git branch: 'main', url: 'https://github.com/PetFactory1991/JavaSelenideJenkinsAllureDockerSelenoid.git'
            }
        }
        stage('Run Tests') {
			steps {
				sh "${MAVEN_HOME} clean test -Dbrowser=${params.BROWSER} -Dremote=http://165.22.93.142:4444/wd/hub"
            }
        }
        stage('Generate Allure Report') {
			steps {
				sh "${ALLURE_HOME} generate allure-results -o allure-report --clean"
            }
        }
    }
    post {
		always {
			script {
				def statusEmoji = (currentBuild.result == "SUCCESS") ? "üü¢" : "üî¥"
                def allureReportUrl = "${env.BUILD_URL}/allure"

                def message = """üîπ *Jenkins Report* üîπ
üìå *Job:* ${env.JOB_NAME} #${env.BUILD_NUMBER}
üîó *–û—Ç—á—ë—Ç:* ${allureReportUrl}
${statusEmoji} *–°—Ç–∞—Ç—É—Å:* ${currentBuild.result}"""

                sh """
                    curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
                    -d chat_id=${TELEGRAM_CHAT_ID} \
                    -d text="${message}" \
                    -d parse_mode="Markdown" \
                    -d disable_web_page_preview=true
                """
            }
            allure includeProperties: false, results: [[path: "allure-results"]]
        }
    }
}
